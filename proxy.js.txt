export default async function handler(req, res) {
  // Allow requests from ChatGPT
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');

  // Handle preflight requests
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // ⭐ REPLACE THIS WITH YOUR ACTUAL DEVELOPER TOKEN ⭐
  const DEVELOPER_TOKEN = IIVUPAW3x0nL1a9JdMJLUw;

  try {
    // Get customer ID from the URL
    const pathParts = req.url.split('/');
    const customerIndex = pathParts.indexOf('customers');
    const customerId = pathParts[customerIndex + 1];
    
    // Prepare headers to send to Google Ads
    const headers = {
      'Authorization': req.headers.authorization, // This comes from ChatGPT OAuth
      'developer-token': DEVELOPER_TOKEN,         // This is your developer token
      'Content-Type': 'application/json',
    };

    // Add customer ID to headers
    if (customerId) {
      headers['customer-id'] = customerId;
    }

    // Send request to Google Ads API
    const googleAdsUrl = `https://googleads.googleapis.com${req.url}`;
    
    const response = await fetch(googleAdsUrl, {
      method: req.method,
      headers: headers,
      body: req.method !== 'GET' ? JSON.stringify(req.body) : undefined,
    });

    const data = await response.json();
    
    // Send response back to ChatGPT
    res.status(response.status).json(data);

  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ 
      error: 'Something went wrong', 
      message: error.message 
    });
  }
}
